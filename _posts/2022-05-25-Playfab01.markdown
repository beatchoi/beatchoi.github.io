---
layout: post
title:  "유니티에서 Azure Playfab 활용하기 - Playfab 프로젝트 세팅"
date:   2022-05-25 14:00:07
categories: Unity3D Fundamentals
description: "Azure Playfab 프로젝트 세팅하기"
image: '/img/UnityFundamental/Playfab01/0.PNG'
published: true
canonical_url: https://beatchoi.github.io/unity3d/fundamentals/2022/05/25/Playfab01/
---
  
  
  {% include adsense.html %}
  
  
## Azure Playfab  
단일 플랫폼에서 멀티플레이어 게임을 구현하기 위한 백엔드 플랫폼 입니다.  
유저 데이터베이스, 멀티플레이어 서버 등 온라인 게임 구현에 필요한 것들을 구현할 수 있습니다.  
본 포스팅을 통해 기본적인 유니티 프로젝트를 세팅해 봅니다.  
  
## Playfab Github.  
Playfab Unity SDK 깃허브 페이지에 접근합니다.  
  
[PlayfabUnitySDK](https://github.com/PlayFab/UnitySDK)  
  
해당 깃의 ReadMe 페이지에서 UnitySDK 및 PlayFab Unity Editor Extensions를 클릭하여 다운로드합니다.  

<p align="center"><img src="/img/UnityFundamental/Playfab01/1.PNG"><br/>
<01. Playfab Unity SDK Github Page ></p>  
  
## Unity3D Project
유니티 프로젝트를 생성합니다.  
생성한 프로젝트에서 다운로드 받은 두개의 패키지 파일을 임포트합니다.  
  
<p align="center"><img src="/img/UnityFundamental/Playfab01/2.PNG"><br/>
<02. 패키지가 임포트된 프로젝트 창 ></p>  
  
유니티 에디터의 상단 탭에서 Window -> PlayFab -> Editor Extension 을 선택합니다.  
  
<p align="center"><img src="/img/UnityFundamental/Playfab01/3.PNG"><br/>
<03. Playfab Editor Extension ></p>  
  
생성되는 PlayFab EdEx 창에서 Create Account 항목을 선택하여 아이디를 생성합니다.  
인증메일이 해당 이메일로 전송되기 때문에 사용 가능한 이메일을 넣습니다.  
  
<p align="center"><img src="/img/UnityFundamental/Playfab01/4.PNG"><br/>
<04. PlayFab 계정 생성 ></p>  
  
## PlayFab 
  
  
```ruby

```

  
  
## 테스트

호스트 창에서 클라이언트가 이동한 싱크가 맞느면 성공입니다.  
<p align="center"><img src="/img/UnityFundamental/MirrorNetwork2/fin.gif">
<14. 좌.클라이언트 우.서버></p> 
  
  
  {% include adsense.html %}
  
  
  
